# TODO: security best practices (container + full)
# TODO: liveness and readiness probes
# TODO: ephemeral temp volume (ask about storage requirements)
{{ $values := .Values | default dict }}

{{- range $key, $model := $values.models }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $values.modelCollectionName }}-model-{{ $model.name }}
  namespace: {{ $values.modelCollectionName }}
  labels:
    app.kubernetes.io/instance: {{ $values.modelCollectionName }}-model-{{ $model.name }}
    {{ include "lib.common.labels" $values | indent 4 | trim }}
spec:
  # TODO: use helm lookup function to find existing deployments' replicas
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $values.modelCollectionName }}-model-{{ $model.name }}
      {{ include "lib.common.selector" $values | indent 6 | trim }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  minReadySeconds: 60
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $values.modelCollectionName }}-model-{{ $model.name }}
        {{ include "lib.common.labels" $values | indent 4 | trim }}
    spec:
      containers:
        - name: model
          {{- if $model.image }}
          image: {{ $model.image }}
          {{- else }}
          image: ersiliaos/{{ $values.modelCollectionName }}{{ $model.name }}:latest
          {{- end }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          resources: 
            requests:
              cpu: 10m
              memory: {{ $model.memoryRequirement }}
            limits:
              cpu: 1000m
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: 80
          readinessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: 80
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          # TODO: volume mounts
          # TODO: security context
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      # TODO: volumes
      # TODO: security context
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                # TODO: add memory label to node
              {{ if eq $model.memoryRequirement "1Gi" -}}
              - key: name
                operator: In
                values:
                - worker-node-1
              {{- else if eq $model.memoryRequirement "6Gi" -}}
              - key: name
                operator: In
                values:
                - model-nodes-8g
              {{- end }}
---
{{- end }}