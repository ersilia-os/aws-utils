{{ $values := .Values | default dict }}

{{- range $key, $model := $values.models }}
{{ $instanceName := nospace (cat $values.modelCollectionName "-model-" $model.name) }}
{{ $existingInstance := (lookup "apps/v1" "Deployment" $values.modelCollectionName $instanceName) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $instanceName }}
  namespace: {{ $values.modelCollectionName }}-models
  labels:
    ersilia.modelid: {{ $values.modelCollectionName }}{{ $model.name }}
    ersilia.modelsize: {{ $model.modelSize }}
    app.kubernetes.io/instance: {{ $instanceName }}
    {{ include "lib.common.labels" $values | indent 4 | trim }}
spec:
  {{- if and $existingInstance $existingInstance.spec }}
  replicas: {{ $existingInstance.spec.replicas }}
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $instanceName }}
      {{ include "lib.common.selector" $values | indent 6 | trim }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  minReadySeconds: 60
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        ersilia.modelid: {{ $values.modelCollectionName }}{{ $model.name }}
        ersilia.modelsize: {{ $model.modelSize }}
        app.kubernetes.io/instance: {{ $instanceName }}
        {{ include "lib.common.labels" $values | indent 8 | trim }}
    spec:
      containers:
        - name: model
          {{- if $model.image }}
          image: {{ $model.image }}
          {{- else }}
          image: ersiliaos/{{ $values.modelCollectionName }}{{ $model.name }}:latest
          {{- end }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
          resources: 
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              cpu: 1000m
              {{- if not $model.noMemoryLimit }}
              {{ include "lib.modelSize.limitLookup" $model | indent 10 | trim }}
              {{- end }}
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: 80
          readinessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: 80
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          # TODO: volume mounts
          # TODO: security context
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ersilia.supportedModelSize
                operator: In
                values:
                  {{ include "lib.modelSize.nodeLabelsLookup" $model | indent 18 | trim }}
---
{{- end }}